/*

Animated Revealing/Hiding Block Modules

When JavaScript is enabled, these blocks are used (most easily in conjunction
with Motif jQuery plugins) to reveal and hide blocks of content, sometimes
accompanied by CSS3 animations.

*/

.js {

    /*

    Reveal Target

    `.reveal__target` is a simple class that is accessibly hidden by default.
    Add the `.is-revealed` class to show it.

        <div class="reveal__target">
            I am hidden.
        </div>
        <div class="reveal__target is-revealed">
            I am no longer hidden.
        </div>

    */

    .reveal__target {
        &:extend( .is-hidden );

        &.is-revealed {

            &:extend( .isnt-hidden );

            /* Pretty */
            overflow: visible;
        }
    }

    /*

    Expand Target

    `.expand__target` has a maximum height of `0` by default, and once it
    receives the `.is-expanded` class, animates in height to its maximum value.
    This is the cheap CSS way of expanding animation, as in collapsible
    accordions. More precise timing most likely requires JS enhancement.

        <div class="expand__target">
            I am hidden from view.
        </div>
        <div class="expand__target is-expanded">
            I have expanded into view.
        </div>

    */

    .expand__target,
    .fade__target {
        &:extend( .relative-container );

        // Display & Box Model
        max-height: 0;
        overflow: hidden;
    }
    .expand__target.is-expanded,
    .fade__target.is-faded {
        max-height: 999px;
    }
    .expand__target.is-expanded,
    .fade__target.is-faded,
    .expand__target.was-expanded,
    .fade__target.was-faded {

        // Mixins
        .transition( all, 0.65s, ease-in-out );
    }

    /*

    Fade Target

    `.fade__target` is the same as `.expand__target` (in that it grows in
    height), but it adds opacity fading to the mix.

        <div class="fade__target">
            I am hidden.
        </div>
        <div class="fade__target is-faded">
            I have faded and expanded into view.
        </div>

    */

    .fade__target {
        .opacity(0);

        &.is-faded {
            .opacity(1);
        }
    }
}